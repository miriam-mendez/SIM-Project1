# Load Required Packages: to be increased over the course
requiredPackages <- c("missMDA","effects","FactoMineR","car","factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr","chemometrics","rpart","ROCR","corrr","readxl","RColorBrewer","psych","corrplot","plotly","xlsx","reshape2","scales","stargazer","kableExtra","lmtest","MASS","effects","car")
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
df <- read.csv("insurance.csv")
df[duplicated(df), ]
lapply(df, class)
categ_cols <- c( 'sex', 'smoker', 'region')
df[categ_cols] = lapply(df[categ_cols], FUN = as.factor)
par(mfrow=c(1,2))
Boxplot(df[,c(1,3,4)])
setwd("C:/Gabriel/Git Workspace/SIM-Project1")
df <- read.csv("insurance.csv")
summary(df)
#View(df)
df[duplicated(df), ]
nrow(df)
df <- df[!duplicated(df), ]
nrow(df)
lapply(df, class)
categ_cols <- c( 'sex', 'smoker', 'region')
df[categ_cols] = lapply(df[categ_cols], FUN = as.factor)
lapply(df, class)
par(mfrow=c(1,2))
Boxplot(df[,c(1,3,4)])
#Age no outliers
#Children no outliers
Boxplot(df$bmi)
Boxplot(df$charges)
#bmi and charges seem to have outliers
#Checking outliers for bmi
ss<-summary(df$bmi);ss
# Upper/lower severe threshold
utso2<-ss[5]+3*(ss[5]-ss[2]);utso2
utsi2<-ss[2]-3*(ss[5]-ss[2]);utsi2
# Upper/lower mild threshold
utmo2<-ss[5]+1.5*(ss[5]-ss[2]);utmo2
utmi2<-ss[2]-1.5*(ss[5]-ss[2]);utmi2
Boxplot(df$bmi,id=list(n=Inf,labels=row.names(df)))
Boxplot(df$bmi)
abline(h=utso2,col="red",lwd=3)
abline(h=utsi2,col="red",lwd=3)
abline(h=utmo2,col="green",lwd=3)
abline(h=utmi2,col="green",lwd=3)
lls.bmi<-which((df$bmi>utso2)|(df$bmi<utsi2));lls.bmi
df[lls.bmi,]
llm.bmi<-which((df$bmi>utmo2)|(df$bmi<utmi2));llm.bmi
df[llm.bmi,]
par(mfrow=c(1,1))
#Checking outliers for charges
ss<-summary(df$charges);ss
# Upper/lower severe threshold
utso2<-ss[5]+3*(ss[5]-ss[2]);utso2
utsi2<-ss[2]-3*(ss[5]-ss[2]);utsi2
# Upper/lower mild threshold
utmo2<-ss[5]+1.5*(ss[5]-ss[2]);utmo2
utmi2<-ss[2]-1.5*(ss[5]-ss[2]);utmi2
Boxplot(df$charges,id=list(n=Inf,labels=row.names(df)))
Boxplot(df$charges)
abline(h=utso2,col="red",lwd=3)
abline(h=utsi2,col="red",lwd=3)
abline(h=utmo2,col="green",lwd=3)
abline(h=utmi2,col="green",lwd=3)
lls<-which((df$charges>utso2)|(df$charges<utsi2));lls
df[lls,]
llm<-which((df$charges>utmo2)|(df$charges<utmi2));llm
df[llm,]
par(mfrow=c(1,1))
#Setting severe outliers from charges as NA
df[lls,"charges"]<-NA
summary(df$charges)
mis_col = colSums(is.na(df))
mis_col
#Only charges has missing data (outliers)
#They can't be imputed because it is the target variable, so they are deleted
md<-which(is.na(df$charges));md
df <- df[-md,]
nrow(df)
library(chemometrics)
res.mout <- Moutlier( df[ , c(1,3,4,7)], quantile = 0.999 )
par(mfrow=c(1,1))
plot( res.mout$md, res.mout$rd )
abline( h=res.mout$cutoff, lwd=2, col="red")
abline( v=res.mout$cutoff, lwd=2, col="red")
llmout <- which( ( res.mout$md > res.mout$cutoff ) & (res.mout$rd > res.mout$cutoff) );llmout
df[llmout,]
res.mout$md[llmout]
#Since there is only one multivariate outlier, we delete it
df <- df[-llmout,]
summary(df)
summary(df)
str(df)
#Normal Check
hist(df$charges, freq=F, main="charges")
curve(dnorm(x,mean(x),sd(x)),lwd=2,add=T,col="red")
shapiro.test(df$charges)
#Log normal check
hist(log(df$charges), freq=F, main="charges")
curve(dnorm(x,mean(x),sd(x)),lwd=2,add=T,col="red")
shapiro.test(log(df$charges))
# autocorrelation
acf(df$charges)
# Durbin-Watson Test for serial correlation
dwtest(df$charge ~ 1)
cor(df[c(7,1,3,4)])
pairs.panels(df[c(7,1,3,4)])
plot(df[c(7,1,3,4)])
res.con <- condes( df, num.var=7, proba = 0.01 )
res.con$quanti
res.con$quali
res.con$category
#First we check if there is any likely relation with any variable
par( mfrow = c(2,2))
plot(df$charges ~ df$age)
plot(df$charges ~ df$bmi)
plot(df$charges ~ df$children)
par( mfrow = c(1,1))
#It seems that with age there might be and slight cuadratic relation
m0a1 <- lm(charges ~ age, data = df)
summary(m0a1)
plot(df$charges ~ df$age)
lines(df$age, fitted(m0a1), lty = 2,col="red")
m0a2 <- lm(charges ~ age+ I(age^2), data = df)
summary(m0a2)
lines(df$age, fitted(m0a2), lty = 2,col="darkgreen")
m0a3 <- lm(charges ~ I(age^2), data = df)
summary(m0a3)
lines(df$age, fitted(m0a3), lty = 2,col="pink")
AIC(m0a1,m0a2,m0a3)
#Seems that using a polinomic aproach in age it would work better
#Now we check with bmi
m0b <- lm(charges ~ bmi, data = df)
summary(m0b)
plot(df$charges ~ df$bmi)
lines(df$bmi, fitted(m0b), lty = 2,col="red")
#there seems to not be a pattern
#Now we check with children
m0c <- lm(charges ~ children, data = df)
summary(m0c)
plot(df$charges ~ df$children)
lines(df$children, fitted(m0c), lty = 2,col="red")
#there seems to not be a pattern
#Now we try all the numeric values
m0 <- lm(charges ~ age + bmi + children , data = df)
summary(m0)
#The intercept is difficult to interpret because it is impossible to have 0's for all values
par( mfrow = c(2,2))
plot(m0, id.n = 0)
par( mfrow = c(1,1))
#Variance inflation factor
vif(m0)
boxcox( charges ~ age + bmi + children , data=df) #lambda = 0
boxTidwell( charges ~ age + bmi + I(children+0.5) , data=df) #lambda age = 1.8
boxTidwell( log(charges) ~ age + bmi + I(children+0.5) , data=df) #lambda age = 0.5
# First we will try the polinomic convertion with age
m1 <- lm(charges ~ age + I(age^2) + bmi + I(children+0.5) , data = df)
summary(m1)
m2 <- lm(charges ~  I(age^2) + bmi + I(children+0.5) , data = df)
summary(m2)
anova(m2,m1) # both models are equivalent
AIC(m0,m1,m2) #m2 has the best AIC (28531.20)
summary(m2)$r.squared
#So until now we keep m2, that has R2 = 0.1217
#Now we try boxcox convertion
m3 <- lm(log(charges) ~  I(age^2) + bmi + I(children+0.5) , data = df)
summary(m3)
summary(m3)$r.squared #0.2946
AIC(m3) #3072.129
residualPlots( m3, id=list(n=5, labels=rownames(df)))
marginalModelPlots(m3, id=list(n=5, labels=rownames(df)))
#Potentially influent data
llev <- which( hatvalues(m3) > 2*(length(coef(m3))/nrow(df)));llev
#Actual influent data Cook´s distance: outliers in cook´s distance
Boxplot(cooks.distance(m3), id=list(labels=rownames(df)))
# BORRAR?
# Threshold Chatterjee-Hadi
thChH <- 4/ (nrow(df) - length(coef(m3)));thChH
par(mfrow=c(1,1))
residualPlots(m3)
influencePlot(m3)
#All the cook distances from the values of the plot are small, comparing with thChH
plot(df$charges ~ df$age)
m0a2 <- lm(charges ~ age+ I(age^2), data = df)
summary(m0a2)
lines(df$age, fitted(m0a2), lty = 2,col="darkgreen")
m0a3 <- lm(charges ~ I(age^2), data = df)
summary(m0a3)
lines(df$age, fitted(m0a3), lty = 2,col="pink")
boxTidwell( log(charges) ~ age + bmi + I(children+0.5) , data=df) #lambda age = 0.5
boxTidwell( log(charges) ~  I(age^2) + bmi + I(children+0.5) , data=df)
#Actual influent data Cook´s distance: outliers in cook´s distance
Boxplot(cooks.distance(m3), id=list(labels=rownames(df)))
residualPlots( m3, id=list(n=5, labels=rownames(df)))
marginalModelPlots(m3, id=list(n=5, labels=rownames(df)))
residualPlots( m3, id=list(n=5, labels=rownames(df)))
marginalModelPlots(m3, id=list(n=5, labels=rownames(df)))
#Potentially influent data
llev <- which( hatvalues(m3) > 2*(length(coef(m3))/nrow(df)));llev
m4 <- lm(log(charges) ~  I(age^2) + bmi + I(children+0.5) , data = df[-llev,])
summary(m4)
residualPlots( m4, id=list(n=5, labels=rownames(df)))
residualPlots( m4)
marginalModelPlots(m4, id=list(n=5, labels=rownames(df)))
par(mfrow=c(1,1))
residualPlots(m3)
influencePlot(m3)
#Actual influent data Cook´s distance: outliers in cook´s distance
Boxplot(cooks.distance(m3), id=list(labels=rownames(df)))
ss<-summary(cooks.distance(m3));ss
# Upper/lower severe threshold
utso2<-ss[5]+3*(ss[5]-ss[2]);utso2
utsi2<-ss[2]-3*(ss[5]-ss[2]);utsi2
# Upper/lower mild threshold
utmo2<-ss[5]+1.5*(ss[5]-ss[2]);utmo2
utmi2<-ss[2]-1.5*(ss[5]-ss[2]);utmi2
Boxplot(df$bmi,id=list(n=Inf,labels=row.names(df)))
Boxplot(cooks.distance(m3),id=list(n=Inf,labels=row.names(df)))
Boxplot(cooks.distance(m3))
abline(h=utso2,col="red",lwd=3)
abline(h=utsi2,col="red",lwd=3)
abline(h=utmo2,col="green",lwd=3)
abline(h=utmi2,col="green",lwd=3)
# BORRAR?
```
Adding factors
cooks.distance(m3)
thChH
par(mfrow=c(1,1))
residualPlots(m3)
influencePlot(m3)
Boxplot(cooks.distance(m3))
abline(h=thChH,col="red",lwd=3)
summary(m4)
Boxplot(cooks.distance(m3))
abline(h=thChH,col="red",lwd=3)
Boxplot(cooks.distance(m3))
hist(cooks.distance(m3))
PLOT(cooks.distance(m3))
plot(cooks.distance(m3))
hist(cooks.distance(m3))
thChH
resout <- which( cooks.distance(m3) > thChH);resout
len(resout)
length(resout)
c(llev,resout)
set(c(llev,resout))
infres <- c(llev,resout)
infres <- infres[!duplicated(infres)]
infres
infres <- as.int(c(llev,resout))
infres <- as.integer(c(llev,resout))
infres <- infres[!duplicated(infres)]; infres
infres <- sort(infres[!duplicated(infres)]); infres
llev
marginalModelPlots(m3, id=list(n=5, labels=rownames(df)))
residualPlots( m3, id=list(n=5, labels=rownames(df)))
#Potentially influent data
llev <- which( hatvalues(m3) > 2*(length(coef(m3))/nrow(df)));llev
influencePlot(m3)
Boxplot(cooks.distance(m3))
abline(h=thChH,col="red",lwd=3)
m5 <- lm(log(charges) ~  I(age^2) + bmi + I(children+0.5) , data = df[-infres,])
summary(m5) # R2 = 0.3012
lenght(df[-infres,1])
length(df[-infres,1])
length(df[,1])
residualPlots( m4)
marginalModelPlots(m4, id=list(n=5, labels=rownames(df)))
length(coef(m3))/nrow(df))
length(coef(m3))/nrow(df)
llev
length(llev)
names(df)
m6 <- lm(log(charges) ~  I(age^2) + bmi + I(children+0.5) + sex + smoker + region, data = df[-infres,])
summary(m6)
